#!/usr/bin/env python
# -*- coding: utf-8 -*-

'''
Цель скрипта: массово создавать папки с подпапками на любую глубину на основе заранее описанной в текстовом файле структуры.
Текстовый файл предполагается создавать в Блокноте в  Windows с русским языком по умолчанию (в кодировке cp1251).

Способ применения скрипта:
1. Создать текстовый файл в стандартной для Windows кодировке cp1251.
2. В текстовом файле описать структуру вложенных папок. Формат описания - список Python, первый элемент в котором это строка - имя папки, а второй - тоже список, содержащий вложенные подпапки.
3. Разместить текстовый файл в папке, внутри которой нужно будет создавать проект с подпапками.
4. Мышкой перетащить текстовый файл на скрипт.
5. В открывшемся окне ввести имя проекта.

В результате в папке с текстовым файлом должна появится папка, имя которой берётся из имени проекта, а внутри нее - подпапки, описанные в текстовом файле.


Отличия от решения из примера:
- Структура папок читается из файла, а не прописана в скрипте.
- Корневой каталог для проектов берётся на основе того, в какой папке лежит текстовый файл, а не прописан в скрипте.
- Имена папок в файле можно задавать на русском языке.
- Имя проекта в консоли можно вводить на русском языке.


Не удалось сделать только одно: обеспечить описание структуры папок в человекопонятном формате, а не в виде списка Python.
Желаемый формат - задавать вложенность папок на основе количества отступов табуляцией.

'''


import os
import sys
import ast
import codecs

"Определяем имя переданного файла и его папку, которая будет папкой для создания проекта"
filePath = sys.argv[1]
path = os.path.dirname(filePath)


"Зачитываем структуру папок из файла с учётом кодировки"
foldersAsText = codecs.open(filePath, encoding='cp1251').read()
folders = ast.literal_eval(foldersAsText)



def createFolder(path):
"Функция для создания папок с проверкой на наличие"
    if not os.path.exists(path):
        os.mkdir(path)


def build(root, data):
"Функция для рекурсивного создания папок начиная от заданной корневой"
    if data:
        for d in data:
            rawName = d[0]
            name = rawName.decode('utf-8')
            path = os.path.join(root, name)
            createFolder(path)
            build(path, d[1])

"Запрашиваем имя папки проекта и вызываем функции для её создания и заполнения подпапками"
projectname = raw_input('Enter project name: ').decode('cp866')
if projectname:
    fullPath = os.path.join(path, projectname)
    createFolder(fullPath)
    build(fullPath, folders)

    
  